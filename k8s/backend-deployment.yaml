apiVersion: apps/v1
kind: Deployment
metadata:
  name: instructions-backend
  labels:
    app: instructions-backend
    tier: backend
    component: api
    part-of: instructions-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: instructions-backend
  template:
    metadata:
      labels:
        app: instructions-backend
        tier: backend
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: /actuator/prometheus
    spec:
      containers:
        - name: app
          image: ghcr.io/example/instructions-backend:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: instructions-backend-config
            - secretRef:
                name: instructions-backend-secret
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
