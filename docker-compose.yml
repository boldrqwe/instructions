services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-instructions}
      POSTGRES_USER: ${POSTGRES_USER:-instructions}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-instructions}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-instructions}
      DB_USERNAME: ${POSTGRES_USER:-instructions}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-instructions}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8080}
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:80"

volumes:
  postgres_data:
